# This file is autogenerated by maturin v1.8.7
# To update, run
##    maturin generate-ci github
name: CI
on:
  push:
    branches:
      - main
      - master
    tags:
      - '*'
  pull_request:
  workflow_dispatch:
    # No inputs needed if we're generating the tag/name automatically
permissions:
  contents: write # Needed for creating and uploading assets to a GitHub Release
  id-token: write # Still needed for OIDC/provenance, etc.
  attestations: write # For build provenance

jobs:
  windows:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: windows-latest
            target: x64
          - runner: windows-latest
            target: x86
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.x
          architecture: ${{ matrix.platform.target }}
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist --find-interpreter
          sccache: ${{ !startsWith(github.ref, 'refs/tags/') }}
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-windows-${{ matrix.platform.target }}
          path: dist

  macos:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: macos-13
            target: x86_64
          - runner: macos-14
            target: aarch64
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.x
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist --find-interpreter
          sccache: ${{ !startsWith(github.ref, 'refs/tags/') }}
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-macos-${{ matrix.platform.target }}
          path: dist

  sdist:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build sdist
        uses: PyO3/maturin-action@v1
        with:
          command: sdist
          args: --out dist
      - name: Upload sdist
        uses: actions/upload-artifact@v4
        with:
          name: wheels-sdist
          path: dist

  release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    # This job runs only on tag pushes or manual workflow_dispatch
    if: ${{ startsWith(github.ref, 'refs/tags/') || github.event_name == 'workflow_dispatch' }}
    needs: [windows, macos, sdist] # Ensure all build jobs complete
    permissions:
      contents: write # Needed to create and upload assets to a GitHub Release
      id-token: write # For attestations/OIDC
      attestations: write # For build provenance
    steps:
      - uses: actions/checkout@v4 # Needed to get git history for rev-parse

      - name: Get version
        id: version
        run: |
          # Use the tag name if triggered by a tag, otherwise generate from date and commit hash
          if [[ "${{ github.event_name }}" == "push" && startsWith(github.ref, 'refs/tags/') ]]; then
            RELEASE_VERSION="${{ github.ref_name }}"
          else
            RELEASE_VERSION="$(date +'%Y%m%d%H%M%S')-$(git rev-parse --short HEAD)"
          fi
          echo "version=${RELEASE_VERSION}" >> $GITHUB_OUTPUT
        shell: bash

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          # Download all artifacts into the current directory
          path: . # This will download each artifact into its own subdirectory (e.g., wheels-windows-x64/)

      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.version.outputs.version }} # Prefix with 'v' for standard versioning
          name: Release ${{ steps.version.outputs.version }}
          body: |
            ## Release ${{ steps.version.outputs.version }}

            This is an automated release.
            Tag: `${{ steps.version.outputs.version }}`
            Commit: `https://github.com/${{ github.repository }}/commit/${{ github.sha }}`

            ---
            *Note: This release was automatically generated by GitHub Actions.*
          draft: false # Set to true to create a draft release
          # Prerelease will be true if the tag name or generated version contains a hyphen (e.g., 'beta-1', '20240101123456-abcde')
          prerelease: ${{ contains(steps.version.outputs.version, '-') }}
          files: |
            # Include all wheel artifacts and the sdist
            wheels-*/*/*.whl # Ensure we pick up .whl files from subdirectories
            wheels-sdist/*.tar.gz # Ensure we pick up .tar.gz from sdist
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # The GITHUB_TOKEN is automatically provided
