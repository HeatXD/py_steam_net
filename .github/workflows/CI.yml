# This file is autogenerated by maturin v1.8.7
# To update, run:
#    maturin generate-ci github
name: CI

on:
  push:
    branches:
      - main
      - master
  pull_request:
  workflow_dispatch:

permissions:
  contents: write
  id-token: write
  attestations: write

jobs:
  windows:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: windows-latest
            target: x64
          - runner: windows-latest
            target: x86
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.x
          architecture: ${{ matrix.platform.target }}
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist --find-interpreter
          sccache: ${{ !startsWith(github.ref, 'refs/tags/') }}
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-windows-${{ matrix.platform.target }}
          path: dist/*.whl

  macos:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: macos-13
            target: x86_64
          - runner: macos-14
            target: aarch64
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.x
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist --find-interpreter
          sccache: ${{ !startsWith(github.ref, 'refs/tags/') }}
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-macos-${{ matrix.platform.target }}
          path: dist/*.whl

  release:
    name: Create Auto-Tagged GitHub Release
    runs-on: ubuntu-latest
    if: ${{ (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master') && success() }}
    needs: [windows, macos]
    permissions:
      contents: write
      id-token: write
      attestations: write
    steps:
      - uses: actions/checkout@v4
  
      - name: Get auto-generated version
        id: version
        run: |
          RELEASE_VERSION="$(date +'%Y%m%d%H%M%S')-$(git rev-parse --short HEAD)"
          echo "version=${RELEASE_VERSION}" >> $GITHUB_OUTPUT
        shell: bash
  
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: .
  
      - name: Debug: List all .whl files
        run: find . -name "*.whl"
  
      - name: Collect wheel files
        id: wheels
        run: |
          FILES=$(find . -name '*.whl' | tr '\n' ' ')
          echo "files=$FILES" >> "$GITHUB_OUTPUT"
  
      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.version.outputs.version }}
          name: Release ${{ steps.version.outputs.version }}
          body: |
            ## Release ${{ steps.version.outputs.version }}
  
            This is an automated release from the latest main/master branch.
            Tag: `${{ steps.version.outputs.version }}`
            Commit: `https://github.com/${{ github.repository }}/commit/${{ github.sha }}`
  
            ---
            *Note: This release was automatically generated by GitHub Actions.*
          files: ${{ steps.wheels.outputs.files }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
